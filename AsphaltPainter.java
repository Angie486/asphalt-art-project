import org.code.neighborhood.*;

//AsphaltPainter is a MuralPainter that paints
//projects in the Neighborhood.

public class AsphaltPainter extends MuralPainter {

  //This is the main method where the other methods are called, 
  //so that I don't need to call them all individually.
  public void paintKuromi() {
    paintEars();
    paintHead();
    paintFace();
    paintBody();
  }

  //This paints the ears of kuromi, consisting of
  //moving right, turning left, painting square, turning right,
  //painting, painting row, moving, and moving left.
  public void paintEars() {
    moveRight();
    turnLeft();
    paintSquare("black");
    turnRight();
    moveRight();
    paint("gray");
    turnLeft();
    move();
    move();
    paintRow("black", 7);
    turnRight();
    move();
    paintRow("black", 3);
    turnLeft();
    move();
    paintRow("black", 9);
   turnLeft();
    moveLeft();
    turnRight();
    paintRow("black", 3);
    turnRight();
    move();
    paintRow("black", 7);
    turnLeft();
    move();
    turnRight();
    paintSquare("black");
    turnRight();
   moveRight();
    paint("gray");
    move();
    move();
    paintRow("black", 7);
    turnRight();
    move();
    paintRow("black", 2);
    turnRight();
    move();
    paintRow("black", 2);
    turnLeft();
    move();
    paintRow("black", 1);
    turnRight();
    move();
    paintRow("black", 1);
    turnLeft();
    move();
   paintRow("black", 3);
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    paintRow("black", 4);
    turnLeft();
    move();
    paintRow("black", 1);
    turnRight();
    move();
      paintRow("black", 1);
    turnLeft();
    move();
     paintRow("black", 2);
    turnRight();
    move();
     paintRow("black", 2);
     turnRight();
    move();
     paintRow("black", 7);
    turnRight();
    move();
    move();
     paintRow("gray", 7);
    turnRight();
    move();
    turnRight();
    move();
     paintRow("gray", 8);
    turnLeft();
    moveLeft();
    paintRow("gray", 8);
  turnRight();
    moveRight();
    move();
    move();
    move();
    paintRow("gray", 5);
    turnLeft();
    moveLeft();
    paintRow("gray", 4);
    turnRight();
    moveRight();
    move();
    paintRow("gray", 3);
    turnLeft();
    moveLeft();
    paintRow("gray", 3);
    turnRight();
    moveRight();
    move();
    paintRow("gray", 1);
    turnRight();
    moveRight();
    move();
    move();
    turnLeft();
    move();
    move();
    move();
    moveRight();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    moveLeft();
    moveRight();
     paintRow("gray", 7);
    moveRight();
    turnRight();
    move();
    paintRow("gray", 8);
    turnLeft();
    moveLeft();
    paintRow("gray", 8);
    turnRight();
    moveRight();
    paintRow("gray", 5);
    turnLeft();
    moveLeft();
    move();
    paintRow("gray", 4);
  turnRight();
    moveRight();
    paintRow("gray", 3);
    turnLeft();
    moveLeft();
    move();
    paintRow("gray", 2);
    turnRight();
    moveRight();
    move();
    paintRow("gray", 1);
    turnRight();
    moveRight();
    move();
    move();
  }

  //This paints Kuromi's head with the skull,
  //consisting of the same elements as the ears, 
  //but using a new color, pink.
public void paintHead() {
  turnRight();
  move();
  moveRight();
  moveLeft();
  paintRow("black", 7);
    turnRight();
  move();
  paint("black");
  moveLeft();
  paint("black");
  turnRight();
  moveRight();
  paintRow("black", 5);
  turnLeft();
  paint("black");
  moveRight();
  paint("black");
  moveLeft();
  paintRow("black", 3);
  turnLeft();
  move();
  paint("black");
  turnRight();
  moveLeft();
  paint("black");
  moveRight();
  paintRow("black", 2);
  turnRight();
  move();
 paint("black");
  moveLeft();
  paint("black");
  moveRight();
  turnLeft();
  paintRow("black", 3);
  turnLeft();
  move();
  paint("black");
  turnRight();
  moveLeft();
  paint("black");
  moveRight();
  turnLeft();
  paintRow("black", 5);
   turnRight();
  move();
  paint("black");
   moveRight();
   paint("black");
   moveLeft();
  turnRight();
 paintRow("black", 8);
  moveRight();
  turnRight();
 paintRow("gray", 9);
  turnLeft();
  move();
  turnLeft();
 paintRow("gray", 11);
  move();
  turnRight();
  moveRight();
 paintRow("gray", 7);
    turnLeft();
  moveLeft();
 paintRow("gray", 6);
 turnRight();
  move();
  turnRight();
 paintRow("gray", 5);
  turnLeft();
  moveLeft();
 paintRow("gray", 5);
  turnRight();
  moveRight();
 paintRow("gray", 5);
  turnLeft();
  moveLeft();
 paintRow("gray", 5);
  turnRight();
  moveRight();
 paintRow("gray", 3);
 paintRow("pink", 2);
 paintRow("gray", 1);
 turnLeft();
  moveLeft();
 paintRow("gray", 1);
 paintRow("pink", 1);
 paintRow("gray", 1);
 paintRow("pink", 1);
 paintRow("gray", 2);
  turnRight();
  moveRight();
 paintRow("gray", 2);
 paintRow("pink", 5);
 paintRow("gray", 1);
  turnLeft();
  moveLeft();
 paintRow("gray", 1);
 paintRow("pink", 5);
 paintRow("gray", 2);
    turnRight();
  moveRight();
 paintRow("gray", 2);
 paintRow("pink", 1);
 paintRow("gray", 1);
 paintRow("pink", 1);
 paintRow("gray", 1);
  turnLeft();
  moveLeft();
 paintRow("gray", 1);
 paintRow("pink", 2);
 paintRow("gray", 3);
    turnRight();
  moveRight();
  paintRow("gray", 5);
  turnLeft();
  moveLeft();
 paintRow("gray", 5);
  turnRight();
  moveRight();
 paintRow("gray", 5);
  turnLeft();
  moveLeft();
 paintRow("gray", 5);
  turnRight();
  moveRight();
 move();
 paintRow("gray", 5);
    turnLeft();
  moveLeft();
 paintRow("gray", 4);
  turnRight();
  moveRight();
  move();
  move();
 paintRow("gray", 7);
 moveRight();
  turnRight();
 paintRow("gray", 7);
}

  //This paints Kuromi's face, consisting
  //of the same code as the others, but just without
  //the color gray.
  public void paintFace() {
    turnLeft();
    turnLeft();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    turnRight();
    move();
    paint("white");
    move();
    paint("black");
    move();
    paintRow("pink", 2);
    paintRow("white", 4);
    paint("black");
    move();
    paintRow("white", 4);
    paintRow("pink", 2);
    paint("black");
    move();
    paint("white");
    turnRight();
    moveRight();
    paint("white");
    move();
    paintRow("pink", 2);
    paintRow("white", 9);
    paintRow("pink", 2);
    paint("white");
    turnLeft();
    move();
    turnLeft();
    paintRow("white", 2);
    paintRow("black", 2);
    paintRow("white", 3);
    paintRow("pink", 2);
    paintRow("white", 3);
    paintRow("black", 2);
    paintRow("white", 1);
turnRight();
    moveRight();
    paintRow("black", 3);
    paintRow("white", 8);
    paintRow("black", 3);
    paintRow("white", 1);
    turnLeft();
    moveLeft();
    paintRow("white", 2);
    paintRow("black", 2);
    paintRow("white", 8);
    paintRow("black", 2);
    paintRow("white", 1);
    turnRight();
    moveRight();
    paintRow("black", 1);
    paintRow("white", 6);
    move();
    move();
    paintRow("white", 4);
    paintRow("black", 1);
    paintRow("white", 1);
    turnLeft();
    moveLeft();
    paintRow("white", 5);
    move();
    move();
    move();
    move();
    move();
    paintRow("white", 4);
    turnRight();
    moveRight();
    move();
    paintRow("white", 3);
      move();
      move();
      move();
      move();
      move();
      move();
    paintRow("white", 3);
    move();
      turnRight();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    move();
    turnRight();
    paintRow("black", 18);
  }

  //This paints the rest of Kuromi, 
  //her body, tail, and arms. Again, this
  //consists of the same code that was used for 
  //the other parts.
public void paintBody() {
  turnLeft();
  moveLeft();
  move();
  move();
    paintRow("black", 1);
    paintRow("gray", 5);
    paintRow("black", 2);
    paintRow("gray", 5);
    paintRow("black", 1);
  turnRight();
  move();
  paint("pink");
  turnRight();
  move();
    paintRow("black", 3);
    paintRow("gray", 2);
    paintRow("black", 1);
    paintRow("white", 2);
    paintRow("black", 1);
    paintRow("gray", 2);
    paintRow("black", 3);
  paint("pink");
  turnLeft();
  moveLeft();
    paintRow("white", 1);
    paintRow("black", 1);
    paintRow("white", 1);
    paintRow("black", 2);
    paintRow("white", 4);
    paintRow("black", 2);
    paintRow("white", 1);
    paintRow("black", 1);
    paintRow("white", 1);
  paint("black");
  turnRight();
  moveRight();
    paintRow("white", 1);
    paintRow("black", 1);
    paintRow("white", 1);
    paintRow("pink", 1);
    paintRow("white", 6);
    paintRow("pink", 1);
    paintRow("white", 1);
    paintRow("black", 1);
  turnLeft();
  moveLeft();
    paintRow("black", 1);
    paintRow("white", 10);
    paintRow("black", 1);
  turnRight();
  moveRight();
   paintRow("black", 1);
    paintRow("white", 10);
    paintRow("black", 1);
  turnLeft();
  moveLeft();
   paintRow("black", 1);
    paintRow("white", 10);
    paintRow("black", 1);
  turnRight();
  moveRight();
    paintRow("black", 1);
    paintRow("white", 4);
    paintRow("black", 3);
    paintRow("white", 3);
    paintRow("black", 1);
  turnLeft();
  moveLeft();
  move();
    paintRow("black", 4);
  move();
  move();
    paintRow("black", 4);
  turnLeft();
  move();
  move();
  move();
  move();
  move();
  turnRight();
  move();
  move();
    paintRow("white", 1);
    paintRow("black", 1);
  turnRight();
  moveRight();
    paintRow("black", 1);
    paintRow("white", 2);
  turnLeft();
  moveLeft();
    paintRow("black", 2);
  turnLeft();
  moveLeft();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
  move();
 turnRight();
  move();
  move();
  move();
  move();
  turnLeft();
  move();
  move();
  move();
  move();
  move();
    paintRow("black", 1);
  turnLeft();
  move();
  turnLeft();
    paintRow("black", 1);
    paintRow("gray", 1);
    paintRow("black", 1);
  move();
  moveRight();
turnRight();
  move();
  paintRow("black", 2);
  paintRow("gray", 3);
   paintRow("black", 1);
  turnLeft();
  moveLeft();
  move();
  paintRow("black", 1);
  paintRow("gray", 1);
  paintRow("black", 2);
  paintRow("white", 2);
  turnRight();
  moveRight();
  paintRow("white", 2);
  paintRow("black", 2);
  paintRow("gray", 1);
  paintRow("black", 1);
  turnLeft();
  moveLeft();
  move();
  paintRow("black", 1);
  paintRow("gray", 2);
  paintRow("black", 2);
  turnRight();
  moveRight();
  paintRow("black", 4);
}
  
  }